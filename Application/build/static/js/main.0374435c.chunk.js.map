{
    "version": 3,
    "sources": [
        "Config.js",
        "GraphService.js",
        "App.js",
        "serviceWorker.js",
        "index.js"
    ],
    "names": [
        "module",
        "exports",
        "appId",
        "scopes",
        "graph",
        "require",
        "getAuthenticatedClient",
        "accessToken",
        "Client",
        "init",
        "authProvider",
        "done",
        "getUserDetails",
        "a",
        "async",
        "client",
        "api",
        "get",
        "user",
        "getUsers",
        "select",
        "users",
        "console",
        "log",
        "tableIcons",
        "Add",
        "forwardRef",
        "props",
        "ref",
        "Check",
        "Clear",
        "Delete",
        "DetailPanel",
        "Edit",
        "Export",
        "Filter",
        "FirstPage",
        "LastPage",
        "NextPage",
        "PreviousPage",
        "ResetSearch",
        "Search",
        "SortArrow",
        "ThirdStateCheck",
        "ViewColumn",
        "FUNCTIONS_BASEURI",
        "FUNCTIONS_KEY",
        "App",
        "Notify",
        "type",
        "message",
        "config",
        "isDebug",
        "String",
        "date",
        "Date",
        "toastId",
        "getTime",
        "toast",
        "info",
        "success",
        "warn",
        "error",
        "userAgentApplication",
        "UserAgentApplication",
        "auth",
        "clientId",
        "cache",
        "cacheLocation",
        "storeAuthStateInCookie",
        "getAccount",
        "state",
        "isAuthenticated",
        "columns",
        "title",
        "field",
        "editable",
        "dbusers",
        "graphusers",
        "getUserProfile",
        "login",
        "ReadUsers",
        "bind",
        "OnClickUpdate",
        "OnClickRemove",
        "JoinGraphUsers",
        "window",
        "msal",
        "acquireTokenSilent",
        "gotusers",
        "this",
        "setState",
        "value",
        "aadid",
        "axios",
        "delete",
        "then",
        "results",
        "status",
        "toString",
        "catch",
        "e",
        "loginPopup",
        "prompt",
        "errParts",
        "split",
        "debug",
        "logout",
        "usr",
        "displayName",
        "email",
        "mail",
        "userPrincipalName",
        "length",
        "JSON",
        "stringify",
        "icons",
        "data",
        "onRowAdd",
        "newData",
        "Promise",
        "resolve",
        "reject",
        "setTimeout",
        "post",
        "push",
        "onRowUpdate",
        "oldData",
        "put",
        "index",
        "indexOf",
        "onRowDelete",
        "splice",
        "options",
        "pageSize",
        "sorting",
        "hideProgressBar",
        "Component",
        "Boolean",
        "location",
        "hostname",
        "match",
        "ReactDOM",
        "render",
        "document",
        "getElementById",
        "navigator",
        "serviceWorker",
        "ready",
        "registration",
        "unregister"
    ],
    "mappings": "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",
    "file": "static/js/main.0374435c.chunk.js",
    "sourcesContent": [
        "module.exports = {\n  appId: '36fa94fd-9b8b-47cb-af1c-52ec436b9d59',\n  scopes: [\n    \"chat.read.all\",\n    \"chat.readwrite.all\",\n    \"group.read.all\",\n    \"group.readwrite.all\",\n    \"user.read.all\",\n    \"user.readwrite.all\",\n  ]\n};",
        "var graph = require('@microsoft/microsoft-graph-client');\n\nfunction getAuthenticatedClient(accessToken) {\n  // Initialize Graph client\n  const client = graph.Client.init({\n    // Use the provided access token to authenticate\n    // requests\n    authProvider: (done) => {\n      done(null, accessToken.accessToken);\n    }\n  });\n\n  return client;\n}\n\nexport async function getUserDetails(accessToken) {\n  const client = getAuthenticatedClient(accessToken);\n\n  const user = await client.api('/me').get();\n  return user;\n}\n\nexport async function getJoinedTeams(accessToken) {\n  const client = getAuthenticatedClient(accessToken);\n\n  const teams = await client\n    .api('/me/joinedTeams')\n    .select('id,displayName,description,internalId,classification,specialization,visibility,webUrl,isArchived,memberSettings,guestSettings,messagingSettings,funSettings,discoverySettings')\n    .orderby('displayName')\n    // .orderby('internalId DESC')\n    .get();\n\n  return teams;\n}\n\nexport async function getUsers(accessToken) {\n  const client = getAuthenticatedClient(accessToken);\n\n  const users = await client\n    .api('/users')\n    .select('businessPhones,displayName,givenName,id,jobTitle,mail,mobilePhone,officeLocation,preferredLanguage,surname,userPrincipalName')\n    .get();\n\n  console.log(users)\n  return users;\n}",
        "import React, { Component } from \"react\";\nimport MaterialTable from \"material-table\";\n// import { DragDropContext } from 'react-beautiful-dnd';\nimport axios from 'axios';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { getUsers } from './GraphService';\nimport { getUserDetails } from './GraphService';\nimport { UserAgentApplication } from 'msal';\nimport config from './Config';\n\n// Icons\nimport { forwardRef } from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n//\n\n\nconst FUNCTIONS_BASEURI = 'https://example.azurewebsites.net/api/v1/User';\nconst FUNCTIONS_KEY = '?code=********************';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    if (config.isDebug) { console.log('isDebug'); }\n\n    this.userAgentApplication = new UserAgentApplication({\n      auth: {\n        clientId: config.appId\n      },\n      cache: {\n        cacheLocation: \"localStorage\",\n        storeAuthStateInCookie: true\n      }\n    });\n    if (config.isDebug) { console.log('this.userAgentApplication'); console.log(this.userAgentApplication); }\n\n    var user = this.userAgentApplication.getAccount();\n    if (config.isDebug) { console.log('user'); console.log(user); }\n\n    this.state = {\n      isAuthenticated: (user !== null),\n\n      columns: [\n        { title: 'AAD ID', field: 'aadid', editable: 'onAdd' },\n        { title: 'DisplayName', field: 'displayName' },\n        { title: 'ID', field: 'id', editable: 'never' },\n        { title: 'Role', field: 'role' },\n        { title: 'Organization ID', field: 'organizationid' }\n      ],\n\n      user: {},\n      users: [],\n      dbusers: [],\n      graphusers: [],\n    };\n    if (config.isDebug) { console.log('this.state'); console.log(this.state); }\n\n    if (user) {\n      // Enhance user object with data from Graph\n      console.log('if (user)');\n      this.getUserProfile();\n    } else {\n      console.log('if (!user)');\n      this.login();\n    }\n\n    this.ReadUsers = this.ReadUsers.bind(this);\n    this.Notify = this.Notify.bind(this);\n    this.OnClickUpdate = this.OnClickUpdate.bind(this);\n    this.OnClickRemove = this.OnClickRemove.bind(this);\n\n    // this.ReadUsers();\n    this.JoinGraphUsers();\n  }\n\n  Notify = (type, message) => {\n    if (config.isDebug) { console.log('Notify(' + String(type) + ', ' + String(message) + ')'); }\n\n    var date = new Date();\n    if (config.isDebug) { console.log('date'); console.log(date); }\n    var toastId = date.getTime(); // UNIXTIME(msec)\n    if (config.isDebug) { console.log('toastId'); console.log(toastId); }\n\n    switch (type) {\n      case \"info\":\n        toast.info(message, { toastId: toastId });\n        break;\n      case \"success\":\n        toast.success(message, { toastId: toastId });\n        break;\n      case \"warning\":\n        toast.warn(message, { toastId: toastId });\n        break;\n      case \"error\":\n        toast.error(message, { toastId: toastId });\n        break;\n      default:\n        toast(message, { toastId: toastId });\n        break;\n    }\n  }\n\n  ReadUsers() {\n    if (config.isDebug) { console.log('ReadUsers()'); }\n\n  //   axios\n  //     .get(FUNCTIONS_BASEURI + FUNCTIONS_KEY)\n  //     .then((results) => {\n  //       const status = results.status;\n  //       if (config.isDebug) { console.log('status'); console.log(status); }\n  //       if (status.toString() === \"200\") {\n  //         const data = results.data;\n  //         if (config.isDebug) { console.log('data'); console.log(data); }\n  //         this.setState({ dbusers: data });\n  //         this.Notify(\"info\", \"[FUNCTIONS]読込みが完了しました。\");\n  //       }\n  //     },\n  //     )\n  //     .catch((e) => {\n  //     });\n  }\n\n  async JoinGraphUsers() {\n    if (config.isDebug) { console.log('JoinGraphUsers()'); }\n\n    try {\n      console.log('JoinGraphUsers')\n      // Get the user's accessr token\n      var accessToken = await window.msal.acquireTokenSilent({\n        scopes: config.scopes\n      });\n      console.log(accessToken)\n      // Get users\n      var gotusers = await getUsers(accessToken);\n      console.log('gotusers'); console.log(gotusers);\n      // Update the array of users in state\n      this.setState({ graphusers: gotusers.value });\n\n      this.Notify(\"success\", \"[Graph API]読込みが完了しました。\");\n      console.log('gotusers.value');\n      console.log(gotusers.value);\n\n\n      // join\n      // var DbUsers = this.state.dbusers;\n      // var GraphUsers = this.state.graphusers;\n      // console.log('DbUsers');\n      // console.log(DbUsers);\n      // console.log('GraphUsers');\n      // console.log(GraphUsers);\n      //\n      // if ((typeof DbUsers !== 'undefined') && (typeof GraphUsers !== 'undefined')) {\n      //   if ((DbUsers.length > 0) && (GraphUsers.length > 0)) {\n      //     console.log('DbUsers');\n      //     console.log(DbUsers);\n      //     console.log('GraphUsers');\n      //     console.log(GraphUsers);\n      //     var Joined = DbUsers.map(dbusr =>\n      //       GraphUsers.some(gusr => gusr.id === dbusr.aadid) ?\n      //         GraphUsers.filter(gusr => gusr.id === dbusr.aadid).map(gusr => Object.assign(gusr, dbusr)) :\n      //         { dbusr }\n      //     ).reduce((a, b) => a.concat(b), []);\n      //     console.log('Joined');\n      //     console.log(Joined);\n      //\n      //     this.setState({ users: Joined });\n      //   }\n      // }\n      //\n    }\n    catch (err) {\n      console.log(String(err));\n    }\n  }\n\n  OnClickUpdate(aadid) {\n    if (config.isDebug) { console.log('OnClickUpdate(' + String(aadid) + ')'); }\n  }\n\n  OnClickRemove(aadid) {\n    if (config.isDebug) { console.log('OnClickRemove(' + String(aadid) + ')'); }\n\n    axios\n      .delete(FUNCTIONS_BASEURI + '/' + aadid + FUNCTIONS_KEY)\n      .then((results) => {\n        const status = results.status;\n        if (config.isDebug) { console.log('status'); console.log(status); }\n        if (status.toString() === \"204\") {\n          this.Notify(\"success\", \"[FUNCTIONS]削除が完了しました。\");\n        }\n      },\n      )\n      .catch((e) => {\n        this.Notify(\"error\", \"[FUNCTIONS]通信に失敗しました。\" + e);\n      });\n  }\n\n  async login() {\n    if (config.isDebug) { console.log('login()'); }\n\n    try {\n      await this.userAgentApplication.loginPopup(\n        {\n          scopes: config.scopes,\n          prompt: \"select_account\"\n        });\n      await this.getUserProfile();\n    }\n    catch (err) {\n      var errParts = err.split('|');\n      this.setState({\n        isAuthenticated: false,\n        user: {},\n        error: { message: errParts[1], debug: errParts[0] }\n      });\n    }\n  }\n\n  logout() {\n    if (config.isDebug) { console.log('logout()'); }\n\n    this.userAgentApplication.logout();\n  }\n\n  async getUserProfile() {\n    if (config.isDebug) { console.log('getUserProfile()'); }\n\n    try {\n      // Get the access token silently\n      // If the cache contains a non-expired token, this function\n      // will just return the cached token. Otherwise, it will\n      // make a request to the Azure OAuth endpoint to get a token\n\n      var accessToken = await this.userAgentApplication.acquireTokenSilent({\n        scopes: config.scopes\n      });\n      console.log('accessToken'); console.log(accessToken);\n\n      if (accessToken) {\n        // Get the user's profile from Graph\n        var usr = await getUserDetails(accessToken);\n        console.log('usr'); console.log(usr);\n        this.setState({\n          isAuthenticated: true,\n          user: {\n            displayName: usr.displayName,\n            email: usr.mail || usr.userPrincipalName\n          },\n          error: null\n        });\n      }\n    }\n    catch (err) {\n      console.log('err'); console.log(err);\n\n      var error = {};\n      if (typeof (err) === 'string') {\n        var errParts = err.split('|');\n        error = errParts.length > 1 ?\n          { message: errParts[1], debug: errParts[0] } :\n          { message: err };\n      } else {\n        error = {\n          message: err.message,\n          debug: JSON.stringify(err)\n        };\n      }\n\n      this.setState({\n        isAuthenticated: false,\n        user: null,\n        error: error\n      });\n    }\n  }\n\n  render() {\n    if (config.isDebug) { console.log('render()'); }\n\n    return (\n      <div>\n        <MaterialTable\n          icons={tableIcons}\n          title=\"material-ui-test\"\n          columns={this.state.columns}\n          data={this.state.users}\n          editable={{\n            onRowAdd: newData =>\n              new Promise((resolve, reject) => {\n                setTimeout(() => {\n                  axios\n                    .post(FUNCTIONS_BASEURI + FUNCTIONS_KEY, newData)\n                    .then((results) => {\n                      const status = results.status;\n                      if (config.isDebug) { console.log('status'); console.log(status); }\n                      if (status.toString() === \"201\") {\n                        this.Notify(\"success\", \"[FUNCTIONS]追加が完了しました。\");\n\n                        const data = this.state.users;\n                        if (config.isDebug) { console.log('data'); console.log(data); }\n                        data.push(newData);\n                        this.setState({ data }, () => resolve());\n                      }\n                    },\n                    )\n                    .catch(() => {\n                      console.log('[FUNCTIONS]通信に失敗しました。');\n                    });\n                  resolve()\n                }, 1000)\n              }),\n            onRowUpdate: (newData, oldData) =>\n              new Promise((resolve, reject) => {\n                setTimeout(() => {\n                  axios\n                    .put(FUNCTIONS_BASEURI + '/' + oldData.aadid + FUNCTIONS_KEY, newData)\n                    .then((results) => {\n                      const status = results.status;\n                      if (config.isDebug) { console.log('status'); console.log(status); }\n                      if (status.toString() === \"204\") {\n                        this.Notify(\"success\", \"[FUNCTIONS]保存が完了しました。\");\n\n                        const data = this.state.users;\n                        if (config.isDebug) { console.log('data'); console.log(data); }\n                        const index = data.indexOf(oldData);\n                        if (config.isDebug) { console.log('index'); console.log(index); }\n                        data[index] = newData;\n                        this.setState({ data }, () => resolve());\n                      }\n                    },\n                    )\n                    .catch(() => {\n                      this.Notify(\"error\", \"[FUNCTIONS]通信に失敗しました。\");\n                    });\n                  resolve()\n                }, 1000)\n              }),\n            onRowDelete: oldData =>\n              new Promise((resolve, reject) => {\n                setTimeout(() => {\n                  axios\n                    .delete(FUNCTIONS_BASEURI + '/' + oldData.aadid + FUNCTIONS_KEY)\n                    .then((results) => {\n                      const status = results.status;\n                      if (config.isDebug) { console.log('status'); console.log(status); }\n                      if (status.toString() === \"204\") {\n                        this.Notify(\"success\", \"[FUNCTIONS]削除が完了しました。\");\n\n                        let data = this.state.users;\n                        if (config.isDebug) { console.log('data'); console.log(data); }\n                        const index = data.indexOf(oldData);\n                        if (config.isDebug) { console.log('index'); console.log(index); }\n                        data.splice(index, 1);\n                        this.setState({ data }, () => resolve());\n                      }\n                    },\n                    )\n                    .catch((e) => {\n                      this.Notify(\"error\", \"[FUNCTIONS]通信に失敗しました。\" + e);\n                    });\n                  resolve()\n                }, 1000)\n              }),\n          }}\n          options={{\n            pageSize: 10,\n            sorting: true\n          }}\n        />\n        <ToastContainer hideProgressBar />\n      </div>\n    )\n  }\n}\nexport default App;\n",
        "// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n",
        "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"
    ],
    "sourceRoot":''
}